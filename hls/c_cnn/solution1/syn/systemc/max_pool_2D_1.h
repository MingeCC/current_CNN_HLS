// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2D_1_HH_
#define _max_pool_2D_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "top_net_fcmp_32nsdEe.h"

namespace ap_rtl {

struct max_pool_2D_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<32> > in_r_q0;
    sc_out< sc_lv<13> > in_r_address1;
    sc_out< sc_logic > in_r_ce1;
    sc_in< sc_lv<32> > in_r_q1;
    sc_out< sc_lv<11> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_2D_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2D_1);

    ~max_pool_2D_1();

    sc_trace_file* mVcdFile;

    top_net_fcmp_32nsdEe<1,1,32,32,1>* top_net_fcmp_32nsdEe_U10;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > indvar_flatten1_reg_151;
    sc_signal< sc_lv<4> > i_reg_162;
    sc_signal< sc_lv<7> > indvar_flatten_reg_173;
    sc_signal< sc_lv<4> > j_reg_184;
    sc_signal< sc_lv<3> > n_reg_195;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_228_p2;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_687;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > indvar_flatten_next1_fu_234_p2;
    sc_signal< sc_lv<11> > indvar_flatten_next1_reg_691;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > i_cast1_mid2_v_fu_260_p3;
    sc_signal< sc_lv<4> > i_cast1_mid2_v_reg_696;
    sc_signal< sc_lv<3> > n_mid2_fu_336_p3;
    sc_signal< sc_lv<3> > n_mid2_reg_702;
    sc_signal< sc_lv<4> > j_cast9_mid2_fu_344_p3;
    sc_signal< sc_lv<4> > j_cast9_mid2_reg_709;
    sc_signal< sc_lv<14> > tmp_6_fu_452_p2;
    sc_signal< sc_lv<14> > tmp_6_reg_715;
    sc_signal< sc_lv<14> > tmp_4_fu_467_p2;
    sc_signal< sc_lv<14> > tmp_4_reg_725;
    sc_signal< sc_lv<14> > tmp_12_fu_514_p2;
    sc_signal< sc_lv<14> > tmp_12_reg_735;
    sc_signal< sc_lv<14> > tmp_14_fu_520_p2;
    sc_signal< sc_lv<14> > tmp_14_reg_741;
    sc_signal< sc_lv<7> > indvar_flatten_next_fu_532_p3;
    sc_signal< sc_lv<7> > indvar_flatten_next_reg_747;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<14> > max_val_1_fu_548_p3;
    sc_signal< sc_lv<14> > max_val_1_reg_757;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<14> > max_val_2_fu_571_p3;
    sc_signal< sc_lv<14> > max_val_2_reg_772;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<3> > n_1_fu_601_p2;
    sc_signal< sc_lv<3> > n_1_reg_787;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_lv<11> > ap_phi_mux_indvar_flatten1_phi_fu_155_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_i_phi_fu_166_p4;
    sc_signal< sc_lv<7> > ap_phi_mux_indvar_flatten_phi_fu_177_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_j_phi_fu_188_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_n_phi_fu_199_p4;
    sc_signal< sc_lv<64> > tmp_1_fu_462_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_477_p1;
    sc_signal< sc_lv<64> > tmp_13_fu_543_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > max_val_1_cast_fu_558_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_566_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > max_val_2_cast_fu_581_p1;
    sc_signal< sc_lv<64> > max_val_3_cast_fu_596_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > tmp_19_fu_682_p1;
    sc_signal< sc_lv<32> > grp_fu_206_p0;
    sc_signal< sc_lv<32> > grp_fu_206_p1;
    sc_signal< sc_lv<5> > tmp_7_fu_214_p3;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_240_p2;
    sc_signal< sc_lv<4> > i_s_fu_254_p2;
    sc_signal< sc_lv<5> > tmp_4_cast_mid2_v_fu_268_p3;
    sc_signal< sc_lv<5> > tmp_5_cast_mid2_v_fu_280_p2;
    sc_signal< sc_lv<5> > tmp_8_fu_222_p2;
    sc_signal< sc_lv<1> > exitcond_fu_312_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_306_p2;
    sc_signal< sc_lv<4> > j_mid_fu_246_p3;
    sc_signal< sc_lv<1> > exitcond_mid_fu_318_p2;
    sc_signal< sc_lv<1> > tmp_fu_330_p2;
    sc_signal< sc_lv<4> > j_1_fu_324_p2;
    sc_signal< sc_lv<5> > tmp_7_mid1_fu_352_p3;
    sc_signal< sc_lv<5> > tmp_7_cast_mid_fu_290_p3;
    sc_signal< sc_lv<5> > tmp_7_cast_mid2_fu_360_p3;
    sc_signal< sc_lv<5> > tmp_8_mid1_fu_372_p2;
    sc_signal< sc_lv<5> > tmp_8_cast_mid_fu_298_p3;
    sc_signal< sc_lv<5> > tmp_8_cast_mid2_fu_378_p3;
    sc_signal< sc_lv<8> > p_shl4_fu_390_p3;
    sc_signal< sc_lv<5> > p_shl5_fu_402_p3;
    sc_signal< sc_lv<9> > p_shl4_cast_fu_398_p1;
    sc_signal< sc_lv<9> > p_shl5_cast_fu_410_p1;
    sc_signal< sc_lv<9> > tmp_9_fu_414_p2;
    sc_signal< sc_lv<9> > tmp_4_cast_mid2_fu_276_p1;
    sc_signal< sc_lv<9> > tmp_s_fu_420_p2;
    sc_signal< sc_lv<11> > p_shl3_fu_434_p3;
    sc_signal< sc_lv<14> > p_shl2_fu_426_p3;
    sc_signal< sc_lv<14> > p_shl3_cast_fu_442_p1;
    sc_signal< sc_lv<14> > tmp_3_fu_446_p2;
    sc_signal< sc_lv<14> > tmp_7_cast_mid2_cast_fu_368_p1;
    sc_signal< sc_lv<32> > tmp_6_cast_fu_458_p1;
    sc_signal< sc_lv<14> > tmp_8_cast_mid2_cast_fu_386_p1;
    sc_signal< sc_lv<32> > tmp_11_cast_fu_473_p1;
    sc_signal< sc_lv<9> > tmp_5_cast_mid2_fu_286_p1;
    sc_signal< sc_lv<9> > tmp_10_fu_482_p2;
    sc_signal< sc_lv<11> > p_shl1_fu_496_p3;
    sc_signal< sc_lv<14> > p_shl_fu_488_p3;
    sc_signal< sc_lv<14> > p_shl1_cast_fu_504_p1;
    sc_signal< sc_lv<14> > tmp_11_fu_508_p2;
    sc_signal< sc_lv<7> > indvar_flatten_op_fu_526_p2;
    sc_signal< sc_lv<32> > tmp_15_cast_fu_540_p1;
    sc_signal< sc_lv<1> > grp_fu_206_p2;
    sc_signal< sc_lv<32> > max_val_1_cast1_fu_554_p1;
    sc_signal< sc_lv<32> > tmp_17_cast_fu_563_p1;
    sc_signal< sc_lv<32> > max_val_2_cast1_fu_577_p1;
    sc_signal< sc_lv<14> > max_val_3_fu_586_p3;
    sc_signal< sc_lv<32> > max_val_3_cast1_fu_592_p1;
    sc_signal< sc_lv<7> > p_shl8_fu_612_p3;
    sc_signal< sc_lv<4> > p_shl9_fu_623_p3;
    sc_signal< sc_lv<8> > p_shl8_cast_fu_619_p1;
    sc_signal< sc_lv<8> > p_shl9_cast_fu_630_p1;
    sc_signal< sc_lv<8> > tmp_17_fu_634_p2;
    sc_signal< sc_lv<8> > i_cast1_mid2_fu_606_p1;
    sc_signal< sc_lv<8> > tmp5_fu_640_p2;
    sc_signal< sc_lv<9> > p_shl7_fu_654_p3;
    sc_signal< sc_lv<12> > p_shl6_fu_646_p3;
    sc_signal< sc_lv<12> > p_shl7_cast_fu_662_p1;
    sc_signal< sc_lv<12> > tmp6_fu_666_p2;
    sc_signal< sc_lv<12> > j_cast9_mid2_cast_fu_609_p1;
    sc_signal< sc_lv<12> > tmp_18_fu_672_p2;
    sc_signal< sc_lv<32> > tmp_21_cast_fu_678_p1;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage2_00001;
    sc_signal< bool > ap_block_pp0_stage3_00001;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage3;
    static const sc_lv<6> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<11> ap_const_lv11_498;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_00001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_00001();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_166_p4();
    void thread_ap_phi_mux_indvar_flatten1_phi_fu_155_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_177_p4();
    void thread_ap_phi_mux_j_phi_fu_188_p4();
    void thread_ap_phi_mux_n_phi_fu_199_p4();
    void thread_ap_ready();
    void thread_exitcond_flatten1_fu_228_p2();
    void thread_exitcond_flatten_fu_240_p2();
    void thread_exitcond_fu_312_p2();
    void thread_exitcond_mid_fu_318_p2();
    void thread_grp_fu_206_p0();
    void thread_grp_fu_206_p1();
    void thread_i_cast1_mid2_fu_606_p1();
    void thread_i_cast1_mid2_v_fu_260_p3();
    void thread_i_s_fu_254_p2();
    void thread_in_r_address0();
    void thread_in_r_address1();
    void thread_in_r_ce0();
    void thread_in_r_ce1();
    void thread_indvar_flatten_next1_fu_234_p2();
    void thread_indvar_flatten_next_fu_532_p3();
    void thread_indvar_flatten_op_fu_526_p2();
    void thread_j_1_fu_324_p2();
    void thread_j_cast9_mid2_cast_fu_609_p1();
    void thread_j_cast9_mid2_fu_344_p3();
    void thread_j_mid_fu_246_p3();
    void thread_max_val_1_cast1_fu_554_p1();
    void thread_max_val_1_cast_fu_558_p1();
    void thread_max_val_1_fu_548_p3();
    void thread_max_val_2_cast1_fu_577_p1();
    void thread_max_val_2_cast_fu_581_p1();
    void thread_max_val_2_fu_571_p3();
    void thread_max_val_3_cast1_fu_592_p1();
    void thread_max_val_3_cast_fu_596_p1();
    void thread_max_val_3_fu_586_p3();
    void thread_n_1_fu_601_p2();
    void thread_n_mid2_fu_336_p3();
    void thread_not_exitcond_flatten_fu_306_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_504_p1();
    void thread_p_shl1_fu_496_p3();
    void thread_p_shl2_fu_426_p3();
    void thread_p_shl3_cast_fu_442_p1();
    void thread_p_shl3_fu_434_p3();
    void thread_p_shl4_cast_fu_398_p1();
    void thread_p_shl4_fu_390_p3();
    void thread_p_shl5_cast_fu_410_p1();
    void thread_p_shl5_fu_402_p3();
    void thread_p_shl6_fu_646_p3();
    void thread_p_shl7_cast_fu_662_p1();
    void thread_p_shl7_fu_654_p3();
    void thread_p_shl8_cast_fu_619_p1();
    void thread_p_shl8_fu_612_p3();
    void thread_p_shl9_cast_fu_630_p1();
    void thread_p_shl9_fu_623_p3();
    void thread_p_shl_fu_488_p3();
    void thread_tmp5_fu_640_p2();
    void thread_tmp6_fu_666_p2();
    void thread_tmp_10_fu_482_p2();
    void thread_tmp_11_cast_fu_473_p1();
    void thread_tmp_11_fu_508_p2();
    void thread_tmp_12_fu_514_p2();
    void thread_tmp_13_fu_543_p1();
    void thread_tmp_14_fu_520_p2();
    void thread_tmp_15_cast_fu_540_p1();
    void thread_tmp_15_fu_566_p1();
    void thread_tmp_17_cast_fu_563_p1();
    void thread_tmp_17_fu_634_p2();
    void thread_tmp_18_fu_672_p2();
    void thread_tmp_19_fu_682_p1();
    void thread_tmp_1_fu_462_p1();
    void thread_tmp_21_cast_fu_678_p1();
    void thread_tmp_3_fu_446_p2();
    void thread_tmp_4_cast_mid2_fu_276_p1();
    void thread_tmp_4_cast_mid2_v_fu_268_p3();
    void thread_tmp_4_fu_467_p2();
    void thread_tmp_5_cast_mid2_fu_286_p1();
    void thread_tmp_5_cast_mid2_v_fu_280_p2();
    void thread_tmp_5_fu_477_p1();
    void thread_tmp_6_cast_fu_458_p1();
    void thread_tmp_6_fu_452_p2();
    void thread_tmp_7_cast_mid2_cast_fu_368_p1();
    void thread_tmp_7_cast_mid2_fu_360_p3();
    void thread_tmp_7_cast_mid_fu_290_p3();
    void thread_tmp_7_fu_214_p3();
    void thread_tmp_7_mid1_fu_352_p3();
    void thread_tmp_8_cast_mid2_cast_fu_386_p1();
    void thread_tmp_8_cast_mid2_fu_378_p3();
    void thread_tmp_8_cast_mid_fu_298_p3();
    void thread_tmp_8_fu_222_p2();
    void thread_tmp_8_mid1_fu_372_p2();
    void thread_tmp_9_fu_414_p2();
    void thread_tmp_fu_330_p2();
    void thread_tmp_s_fu_420_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
