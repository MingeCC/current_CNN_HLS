// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2D_HH_
#define _max_pool_2D_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "top_net_fcmp_32nsdEe.h"

namespace ap_rtl {

struct max_pool_2D : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<32> > in_r_q0;
    sc_out< sc_lv<11> > in_r_address1;
    sc_out< sc_logic > in_r_ce1;
    sc_in< sc_lv<32> > in_r_q1;
    sc_out< sc_lv<9> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_2D(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2D);

    ~max_pool_2D();

    sc_trace_file* mVcdFile;

    top_net_fcmp_32nsdEe<1,1,32,32,1>* top_net_fcmp_32nsdEe_U20;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > indvar_flatten2_reg_145;
    sc_signal< sc_lv<3> > i_reg_156;
    sc_signal< sc_lv<8> > indvar_flatten_reg_167;
    sc_signal< sc_lv<3> > j_reg_178;
    sc_signal< sc_lv<5> > n_reg_189;
    sc_signal< sc_lv<1> > exitcond_flatten2_fu_222_p2;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_633;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > indvar_flatten_next2_fu_228_p2;
    sc_signal< sc_lv<9> > indvar_flatten_next2_reg_637;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > i_cast9_mid2_v_fu_254_p3;
    sc_signal< sc_lv<3> > i_cast9_mid2_v_reg_642;
    sc_signal< sc_lv<5> > n_mid2_fu_330_p3;
    sc_signal< sc_lv<5> > n_mid2_reg_648;
    sc_signal< sc_lv<3> > j_cast8_mid2_fu_338_p3;
    sc_signal< sc_lv<3> > j_cast8_mid2_reg_654;
    sc_signal< sc_lv<4> > tmp_1_fu_384_p1;
    sc_signal< sc_lv<4> > tmp_1_reg_660;
    sc_signal< sc_lv<11> > tmp_12_fu_448_p2;
    sc_signal< sc_lv<11> > tmp_12_reg_665;
    sc_signal< sc_lv<11> > tmp_14_fu_459_p2;
    sc_signal< sc_lv<11> > tmp_14_reg_675;
    sc_signal< sc_lv<11> > tmp_18_fu_502_p2;
    sc_signal< sc_lv<11> > tmp_18_reg_685;
    sc_signal< sc_lv<11> > tmp_20_fu_508_p2;
    sc_signal< sc_lv<11> > tmp_20_reg_691;
    sc_signal< sc_lv<8> > indvar_flatten_next_fu_520_p3;
    sc_signal< sc_lv<8> > indvar_flatten_next_reg_697;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<11> > max_val_1_fu_532_p3;
    sc_signal< sc_lv<11> > max_val_1_reg_707;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<11> > max_val_4_fu_547_p3;
    sc_signal< sc_lv<11> > max_val_4_reg_722;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<7> > tmp5_fu_592_p2;
    sc_signal< sc_lv<7> > tmp5_reg_737;
    sc_signal< sc_lv<5> > n_1_fu_598_p2;
    sc_signal< sc_lv<5> > n_1_reg_743;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_lv<9> > ap_phi_mux_indvar_flatten2_phi_fu_149_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_i_phi_fu_160_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_indvar_flatten_phi_fu_171_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_j_phi_fu_182_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_n_phi_fu_193_p4;
    sc_signal< sc_lv<64> > tmp_13_fu_454_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_465_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_528_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > max_val_1_cast_fu_538_p1;
    sc_signal< sc_lv<64> > tmp_21_fu_543_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > max_val_4_cast_fu_553_p1;
    sc_signal< sc_lv<64> > max_val_5_cast_fu_570_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > tmp_24_fu_628_p1;
    sc_signal< sc_lv<32> > grp_fu_200_p0;
    sc_signal< sc_lv<32> > grp_fu_200_p1;
    sc_signal< sc_lv<4> > tmp_7_fu_208_p3;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_234_p2;
    sc_signal< sc_lv<3> > i_s_fu_248_p2;
    sc_signal< sc_lv<4> > tmp_4_cast_mid2_v_fu_262_p3;
    sc_signal< sc_lv<4> > tmp_5_cast_mid2_v_fu_274_p2;
    sc_signal< sc_lv<4> > tmp_8_fu_216_p2;
    sc_signal< sc_lv<1> > exitcond_fu_306_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_300_p2;
    sc_signal< sc_lv<3> > j_mid_fu_240_p3;
    sc_signal< sc_lv<1> > exitcond_mid_fu_312_p2;
    sc_signal< sc_lv<1> > tmp_fu_324_p2;
    sc_signal< sc_lv<3> > j_1_fu_318_p2;
    sc_signal< sc_lv<4> > tmp_7_mid1_fu_346_p3;
    sc_signal< sc_lv<4> > tmp_7_cast_mid_fu_284_p3;
    sc_signal< sc_lv<4> > tmp_7_cast_mid2_fu_354_p3;
    sc_signal< sc_lv<4> > tmp_8_mid1_fu_366_p2;
    sc_signal< sc_lv<4> > tmp_8_cast_mid_fu_292_p3;
    sc_signal< sc_lv<4> > tmp_8_cast_mid2_fu_372_p3;
    sc_signal< sc_lv<7> > p_shl4_fu_388_p3;
    sc_signal< sc_lv<5> > tmp_2_fu_400_p2;
    sc_signal< sc_lv<8> > p_shl4_cast_fu_396_p1;
    sc_signal< sc_lv<8> > p_shl5_cast_fu_406_p1;
    sc_signal< sc_lv<8> > tmp_4_cast_mid2_fu_270_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_410_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_416_p2;
    sc_signal< sc_lv<9> > p_shl3_fu_430_p3;
    sc_signal< sc_lv<11> > p_shl2_fu_422_p3;
    sc_signal< sc_lv<11> > p_shl3_cast_fu_438_p1;
    sc_signal< sc_lv<11> > tmp_7_cast_mid2_cast_fu_362_p1;
    sc_signal< sc_lv<11> > tmp_11_fu_442_p2;
    sc_signal< sc_lv<11> > tmp_8_cast_mid2_cast_fu_380_p1;
    sc_signal< sc_lv<8> > tmp_5_cast_mid2_fu_280_p1;
    sc_signal< sc_lv<8> > tmp_16_fu_470_p2;
    sc_signal< sc_lv<9> > p_shl1_fu_484_p3;
    sc_signal< sc_lv<11> > p_shl_fu_476_p3;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_492_p1;
    sc_signal< sc_lv<11> > tmp_17_fu_496_p2;
    sc_signal< sc_lv<8> > indvar_flatten_op_fu_514_p2;
    sc_signal< sc_lv<1> > grp_fu_200_p2;
    sc_signal< sc_lv<11> > max_val_5_fu_564_p3;
    sc_signal< sc_lv<6> > p_shl7_fu_575_p3;
    sc_signal< sc_lv<7> > i_cast9_mid2_fu_558_p1;
    sc_signal< sc_lv<7> > p_shl7_cast_fu_582_p1;
    sc_signal< sc_lv<7> > n_cast7_fu_561_p1;
    sc_signal< sc_lv<7> > tmp3_fu_586_p2;
    sc_signal< sc_lv<9> > j_cast8_mid2_cast_fu_603_p1;
    sc_signal< sc_lv<9> > p_shl6_fu_609_p3;
    sc_signal< sc_lv<9> > tmp5_cast_fu_606_p1;
    sc_signal< sc_lv<9> > tmp4_fu_616_p2;
    sc_signal< sc_lv<9> > tmp_23_fu_622_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage2_00001;
    sc_signal< bool > ap_block_pp0_stage3_00001;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage3;
    static const sc_lv<6> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<9> ap_const_lv9_190;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<8> ap_const_lv8_50;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_00001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_00001();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_160_p4();
    void thread_ap_phi_mux_indvar_flatten2_phi_fu_149_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_171_p4();
    void thread_ap_phi_mux_j_phi_fu_182_p4();
    void thread_ap_phi_mux_n_phi_fu_193_p4();
    void thread_ap_ready();
    void thread_exitcond_flatten2_fu_222_p2();
    void thread_exitcond_flatten_fu_234_p2();
    void thread_exitcond_fu_306_p2();
    void thread_exitcond_mid_fu_312_p2();
    void thread_grp_fu_200_p0();
    void thread_grp_fu_200_p1();
    void thread_i_cast9_mid2_fu_558_p1();
    void thread_i_cast9_mid2_v_fu_254_p3();
    void thread_i_s_fu_248_p2();
    void thread_in_r_address0();
    void thread_in_r_address1();
    void thread_in_r_ce0();
    void thread_in_r_ce1();
    void thread_indvar_flatten_next2_fu_228_p2();
    void thread_indvar_flatten_next_fu_520_p3();
    void thread_indvar_flatten_op_fu_514_p2();
    void thread_j_1_fu_318_p2();
    void thread_j_cast8_mid2_cast_fu_603_p1();
    void thread_j_cast8_mid2_fu_338_p3();
    void thread_j_mid_fu_240_p3();
    void thread_max_val_1_cast_fu_538_p1();
    void thread_max_val_1_fu_532_p3();
    void thread_max_val_4_cast_fu_553_p1();
    void thread_max_val_4_fu_547_p3();
    void thread_max_val_5_cast_fu_570_p1();
    void thread_max_val_5_fu_564_p3();
    void thread_n_1_fu_598_p2();
    void thread_n_cast7_fu_561_p1();
    void thread_n_mid2_fu_330_p3();
    void thread_not_exitcond_flatten_fu_300_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_492_p1();
    void thread_p_shl1_fu_484_p3();
    void thread_p_shl2_fu_422_p3();
    void thread_p_shl3_cast_fu_438_p1();
    void thread_p_shl3_fu_430_p3();
    void thread_p_shl4_cast_fu_396_p1();
    void thread_p_shl4_fu_388_p3();
    void thread_p_shl5_cast_fu_406_p1();
    void thread_p_shl6_fu_609_p3();
    void thread_p_shl7_cast_fu_582_p1();
    void thread_p_shl7_fu_575_p3();
    void thread_p_shl_fu_476_p3();
    void thread_tmp3_fu_586_p2();
    void thread_tmp4_fu_616_p2();
    void thread_tmp5_cast_fu_606_p1();
    void thread_tmp5_fu_592_p2();
    void thread_tmp_10_fu_416_p2();
    void thread_tmp_11_fu_442_p2();
    void thread_tmp_12_fu_448_p2();
    void thread_tmp_13_fu_454_p1();
    void thread_tmp_14_fu_459_p2();
    void thread_tmp_15_fu_465_p1();
    void thread_tmp_16_fu_470_p2();
    void thread_tmp_17_fu_496_p2();
    void thread_tmp_18_fu_502_p2();
    void thread_tmp_19_fu_528_p1();
    void thread_tmp_1_fu_384_p1();
    void thread_tmp_20_fu_508_p2();
    void thread_tmp_21_fu_543_p1();
    void thread_tmp_23_fu_622_p2();
    void thread_tmp_24_fu_628_p1();
    void thread_tmp_2_fu_400_p2();
    void thread_tmp_4_cast_mid2_fu_270_p1();
    void thread_tmp_4_cast_mid2_v_fu_262_p3();
    void thread_tmp_5_cast_mid2_fu_280_p1();
    void thread_tmp_5_cast_mid2_v_fu_274_p2();
    void thread_tmp_7_cast_mid2_cast_fu_362_p1();
    void thread_tmp_7_cast_mid2_fu_354_p3();
    void thread_tmp_7_cast_mid_fu_284_p3();
    void thread_tmp_7_fu_208_p3();
    void thread_tmp_7_mid1_fu_346_p3();
    void thread_tmp_8_cast_mid2_cast_fu_380_p1();
    void thread_tmp_8_cast_mid2_fu_372_p3();
    void thread_tmp_8_cast_mid_fu_292_p3();
    void thread_tmp_8_fu_216_p2();
    void thread_tmp_8_mid1_fu_366_p2();
    void thread_tmp_9_fu_410_p2();
    void thread_tmp_fu_324_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
