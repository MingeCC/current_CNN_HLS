// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_5_HH_
#define _conv_5_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "top_net_fadd_32nsbkb.h"
#include "top_net_fmul_32nscud.h"
#include "conv_5_c5_weight.h"
#include "conv_5_c5_bias.h"

namespace ap_rtl {

struct conv_5 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<32> > in_r_q0;
    sc_out< sc_lv<4> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;


    // Module declarations
    conv_5(sc_module_name name);
    SC_HAS_PROCESS(conv_5);

    ~conv_5();

    sc_trace_file* mVcdFile;

    conv_5_c5_weight* c5_weight_U;
    conv_5_c5_bias* c5_bias_U;
    top_net_fadd_32nsbkb<1,1,32,32,32>* top_net_fadd_32nsbkb_U35;
    top_net_fmul_32nscud<1,1,32,32,32>* top_net_fmul_32nscud_U36;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > c5_weight_address0;
    sc_signal< sc_logic > c5_weight_ce0;
    sc_signal< sc_lv<32> > c5_weight_q0;
    sc_signal< sc_lv<4> > c5_bias_address0;
    sc_signal< sc_logic > c5_bias_ce0;
    sc_signal< sc_lv<32> > c5_bias_q0;
    sc_signal< sc_lv<7> > indvar_flatten5_reg_172;
    sc_signal< sc_lv<7> > cin_reg_183;
    sc_signal< sc_lv<2> > indvar_flatten_reg_194;
    sc_signal< sc_lv<1> > y_reg_205;
    sc_signal< sc_lv<32> > output_buffer_2_reg_216;
    sc_signal< sc_lv<1> > x_reg_228;
    sc_signal< sc_lv<4> > indvar_flatten_next4_fu_259_p2;
    sc_signal< sc_lv<4> > indvar_flatten_next4_reg_511;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_265_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_516;
    sc_signal< sc_lv<1> > exitcond_flatten4_fu_253_p2;
    sc_signal< sc_lv<4> > tmp_25_mid2_v_v_fu_277_p3;
    sc_signal< sc_lv<4> > tmp_25_mid2_v_v_reg_524;
    sc_signal< sc_lv<10> > tmp_25_mid2_fu_310_p2;
    sc_signal< sc_lv<10> > tmp_25_mid2_reg_536;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > c5_bias_load_reg_541;
    sc_signal< sc_lv<4> > h_cast9_mid2_cast_fu_346_p1;
    sc_signal< sc_lv<4> > h_cast9_mid2_cast_reg_546;
    sc_signal< sc_lv<1> > h_mid2_fu_350_p3;
    sc_signal< sc_lv<1> > h_mid2_reg_551;
    sc_signal< sc_lv<1> > exitcond_flatten5_fu_358_p2;
    sc_signal< sc_lv<1> > exitcond_flatten5_reg_557;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<7> > indvar_flatten_next5_fu_364_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > tmp4_mid2_v_v_fu_400_p3;
    sc_signal< sc_lv<7> > tmp4_mid2_v_v_reg_566;
    sc_signal< sc_lv<1> > tmp1_cast_mid2_v_v_fu_429_p3;
    sc_signal< sc_lv<1> > tmp1_cast_mid2_v_v_reg_571;
    sc_signal< sc_lv<2> > indvar_flatten_next_fu_478_p3;
    sc_signal< sc_lv<32> > grp_fu_240_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<2> > indvar_flatten_next3_fu_501_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_lv<4> > indvar_flatten3_reg_112;
    sc_signal< sc_lv<4> > cout_reg_123;
    sc_signal< sc_lv<2> > indvar_flatten4_reg_134;
    sc_signal< sc_lv<1> > h_reg_146;
    sc_signal< sc_lv<1> > w_reg_158;
    sc_signal< sc_lv<7> > ap_phi_mux_cin_phi_fu_187_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > ap_phi_mux_y_phi_fu_209_p4;
    sc_signal< sc_lv<1> > ap_phi_mux_x_phi_fu_232_p4;
    sc_signal< sc_lv<64> > c5_bias_load_mid2_fu_285_p1;
    sc_signal< sc_lv<64> > tmp_30_fu_452_p1;
    sc_signal< sc_lv<64> > tmp_32_fu_467_p1;
    sc_signal< sc_lv<64> > tmp_27_fu_490_p1;
    sc_signal< sc_lv<32> > grp_fu_240_p0;
    sc_signal< sc_lv<32> > tmp_33_fu_246_p2;
    sc_signal< sc_lv<4> > cout_s_fu_271_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_2_fu_290_p2;
    sc_signal< sc_lv<4> > tmp_25_mid2_fu_310_p0;
    sc_signal< sc_lv<1> > not_exitcond_flatten_3_fu_316_p2;
    sc_signal< sc_lv<1> > h_not_fu_327_p2;
    sc_signal< sc_lv<1> > w_mid_fu_301_p2;
    sc_signal< sc_lv<1> > h_1_fu_333_p2;
    sc_signal< sc_lv<1> > h_cast9_mid_fu_321_p2;
    sc_signal< sc_lv<1> > h_cast9_mid2_fu_338_p3;
    sc_signal< sc_lv<1> > h_mid_fu_295_p2;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_370_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_376_p2;
    sc_signal< sc_lv<7> > cin_s_fu_394_p2;
    sc_signal< sc_lv<10> > tmp4_mid2_v_fu_408_p1;
    sc_signal< sc_lv<1> > y_not_fu_417_p2;
    sc_signal< sc_lv<1> > x_mid_fu_388_p2;
    sc_signal< sc_lv<1> > y_1_fu_423_p2;
    sc_signal< sc_lv<1> > y_mid_fu_382_p2;
    sc_signal< sc_lv<1> > tmp1_cast_mid2_v_fu_437_p2;
    sc_signal< sc_lv<7> > tmp1_cast_mid2_fu_442_p1;
    sc_signal< sc_lv<7> > tmp_29_fu_446_p2;
    sc_signal< sc_lv<10> > tmp5_cast_fu_457_p1;
    sc_signal< sc_lv<10> > tmp4_mid2_fu_412_p2;
    sc_signal< sc_lv<10> > tmp_31_fu_461_p2;
    sc_signal< sc_lv<2> > indvar_flatten_op_fu_472_p2;
    sc_signal< sc_lv<4> > tmp_26_fu_486_p2;
    sc_signal< sc_lv<2> > indvar_flatten23_op_fu_495_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > tmp_25_mid2_fu_310_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_54;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<7> ap_const_lv7_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_cin_phi_fu_187_p4();
    void thread_ap_phi_mux_x_phi_fu_232_p4();
    void thread_ap_phi_mux_y_phi_fu_209_p4();
    void thread_ap_ready();
    void thread_c5_bias_address0();
    void thread_c5_bias_ce0();
    void thread_c5_bias_load_mid2_fu_285_p1();
    void thread_c5_weight_address0();
    void thread_c5_weight_ce0();
    void thread_cin_s_fu_394_p2();
    void thread_cout_s_fu_271_p2();
    void thread_exitcond_flatten1_fu_370_p2();
    void thread_exitcond_flatten4_fu_253_p2();
    void thread_exitcond_flatten5_fu_358_p2();
    void thread_exitcond_flatten_fu_265_p2();
    void thread_grp_fu_240_p0();
    void thread_h_1_fu_333_p2();
    void thread_h_cast9_mid2_cast_fu_346_p1();
    void thread_h_cast9_mid2_fu_338_p3();
    void thread_h_cast9_mid_fu_321_p2();
    void thread_h_mid2_fu_350_p3();
    void thread_h_mid_fu_295_p2();
    void thread_h_not_fu_327_p2();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_indvar_flatten23_op_fu_495_p2();
    void thread_indvar_flatten_next3_fu_501_p3();
    void thread_indvar_flatten_next4_fu_259_p2();
    void thread_indvar_flatten_next5_fu_364_p2();
    void thread_indvar_flatten_next_fu_478_p3();
    void thread_indvar_flatten_op_fu_472_p2();
    void thread_not_exitcond_flatten_2_fu_290_p2();
    void thread_not_exitcond_flatten_3_fu_316_p2();
    void thread_not_exitcond_flatten_fu_376_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_tmp1_cast_mid2_fu_442_p1();
    void thread_tmp1_cast_mid2_v_fu_437_p2();
    void thread_tmp1_cast_mid2_v_v_fu_429_p3();
    void thread_tmp4_mid2_fu_412_p2();
    void thread_tmp4_mid2_v_fu_408_p1();
    void thread_tmp4_mid2_v_v_fu_400_p3();
    void thread_tmp5_cast_fu_457_p1();
    void thread_tmp_25_mid2_fu_310_p0();
    void thread_tmp_25_mid2_fu_310_p00();
    void thread_tmp_25_mid2_fu_310_p2();
    void thread_tmp_25_mid2_v_v_fu_277_p3();
    void thread_tmp_26_fu_486_p2();
    void thread_tmp_27_fu_490_p1();
    void thread_tmp_29_fu_446_p2();
    void thread_tmp_30_fu_452_p1();
    void thread_tmp_31_fu_461_p2();
    void thread_tmp_32_fu_467_p1();
    void thread_w_mid_fu_301_p2();
    void thread_x_mid_fu_388_p2();
    void thread_y_1_fu_423_p2();
    void thread_y_mid_fu_382_p2();
    void thread_y_not_fu_417_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
