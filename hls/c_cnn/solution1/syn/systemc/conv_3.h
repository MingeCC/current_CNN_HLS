// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_3_HH_
#define _conv_3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "top_net_fadd_32nsbkb.h"
#include "top_net_fmul_32nscud.h"
#include "conv_3_c3_weight.h"
#include "conv_3_c3_bias.h"

namespace ap_rtl {

struct conv_3 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<32> > in_r_q0;
    sc_out< sc_lv<7> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;


    // Module declarations
    conv_3(sc_module_name name);
    SC_HAS_PROCESS(conv_3);

    ~conv_3();

    sc_trace_file* mVcdFile;

    conv_3_c3_weight* c3_weight_U;
    conv_3_c3_bias* c3_bias_U;
    top_net_fadd_32nsbkb<1,1,32,32,32>* top_net_fadd_32nsbkb_U23;
    top_net_fmul_32nscud<1,1,32,32,32>* top_net_fmul_32nscud_U24;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > c3_weight_address0;
    sc_signal< sc_logic > c3_weight_ce0;
    sc_signal< sc_lv<32> > c3_weight_q0;
    sc_signal< sc_lv<7> > c3_bias_address0;
    sc_signal< sc_logic > c3_bias_ce0;
    sc_signal< sc_lv<32> > c3_bias_q0;
    sc_signal< sc_lv<9> > indvar_flatten2_reg_196;
    sc_signal< sc_lv<5> > cin_reg_207;
    sc_signal< sc_lv<6> > indvar_flatten_reg_218;
    sc_signal< sc_lv<3> > y_reg_229;
    sc_signal< sc_lv<32> > output_buffer_2_reg_240;
    sc_signal< sc_lv<3> > x_reg_252;
    sc_signal< sc_lv<7> > indvar_flatten_next1_1_fu_282_p2;
    sc_signal< sc_lv<7> > indvar_flatten_next1_1_reg_856;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_flatten3_fu_288_p2;
    sc_signal< sc_lv<1> > exitcond_flatten3_reg_861;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_276_p2;
    sc_signal< sc_lv<7> > tmp_32_mid2_v_v_fu_318_p3;
    sc_signal< sc_lv<7> > tmp_32_mid2_v_v_reg_866;
    sc_signal< sc_lv<1> > h_cast_mid2_fu_355_p3;
    sc_signal< sc_lv<1> > h_cast_mid2_reg_878;
    sc_signal< sc_lv<1> > h_mid2_fu_363_p3;
    sc_signal< sc_lv<1> > h_mid2_reg_884;
    sc_signal< sc_lv<11> > tmp_32_mid2_fu_371_p3;
    sc_signal< sc_lv<11> > tmp_32_mid2_reg_889;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > c3_bias_load_reg_895;
    sc_signal< sc_lv<7> > h_cast_mid2_cast_fu_378_p1;
    sc_signal< sc_lv<7> > h_cast_mid2_cast_reg_900;
    sc_signal< sc_lv<3> > h_cast1_mid2_cast_fu_381_p1;
    sc_signal< sc_lv<3> > h_cast1_mid2_cast_reg_906;
    sc_signal< sc_lv<1> > exitcond_flatten4_fu_484_p2;
    sc_signal< sc_lv<1> > exitcond_flatten4_reg_912;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > indvar_flatten_next1_fu_490_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > cin_mid2_fu_658_p3;
    sc_signal< sc_lv<3> > y_mid2_fu_763_p3;
    sc_signal< sc_lv<3> > x_1_fu_811_p2;
    sc_signal< sc_lv<6> > indvar_flatten_next_fu_823_p3;
    sc_signal< sc_lv<32> > grp_fu_263_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<2> > indvar_flatten_next9_fu_846_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_lv<7> > indvar_flatten9_reg_138;
    sc_signal< sc_lv<7> > cout_reg_149;
    sc_signal< sc_lv<2> > indvar_flatten1_reg_160;
    sc_signal< sc_lv<1> > h_reg_172;
    sc_signal< sc_lv<1> > w_reg_183;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > c3_bias_load_mid2_fu_326_p1;
    sc_signal< sc_lv<64> > tmp_51_fu_785_p1;
    sc_signal< sc_lv<64> > tmp_53_fu_806_p1;
    sc_signal< sc_lv<64> > tmp_47_fu_835_p1;
    sc_signal< sc_lv<32> > grp_fu_263_p0;
    sc_signal< sc_lv<32> > tmp_s_fu_269_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_6_fu_294_p2;
    sc_signal< sc_lv<7> > cout_s_fu_312_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_7_fu_331_p2;
    sc_signal< sc_lv<1> > h_not_fu_343_p2;
    sc_signal< sc_lv<1> > w_mid_fu_306_p2;
    sc_signal< sc_lv<1> > h_1_fu_349_p2;
    sc_signal< sc_lv<1> > h_cast_mid_fu_337_p2;
    sc_signal< sc_lv<1> > h_mid_fu_300_p2;
    sc_signal< sc_lv<4> > tmp_3_fu_392_p1;
    sc_signal< sc_lv<6> > p_shl1_fu_396_p3;
    sc_signal< sc_lv<11> > cin_cast2_fu_388_p1;
    sc_signal< sc_lv<11> > tmp_43_fu_408_p2;
    sc_signal< sc_lv<13> > p_shl_fu_413_p3;
    sc_signal< sc_lv<7> > cin_cast1_fu_384_p1;
    sc_signal< sc_lv<7> > p_shl1_cast_fu_404_p1;
    sc_signal< sc_lv<3> > tmp3_fu_435_p2;
    sc_signal< sc_lv<7> > tmp2_fu_425_p2;
    sc_signal< sc_lv<7> > tmp3_cast_fu_440_p1;
    sc_signal< sc_lv<7> > tmp_48_fu_444_p2;
    sc_signal< sc_lv<11> > y_cast_fu_431_p1;
    sc_signal< sc_lv<11> > tmp4_fu_462_p2;
    sc_signal< sc_lv<14> > p_shl_cast_fu_421_p1;
    sc_signal< sc_lv<14> > tmp4_cast_fu_468_p1;
    sc_signal< sc_lv<9> > tmp_51_cast_fu_450_p1;
    sc_signal< sc_lv<9> > p_shl3_fu_454_p3;
    sc_signal< sc_lv<1> > exitcond_flatten5_fu_496_p2;
    sc_signal< sc_lv<5> > cin_s_fu_510_p2;
    sc_signal< sc_lv<4> > tmp_4_fu_524_p1;
    sc_signal< sc_lv<6> > p_shl1_mid1_fu_528_p3;
    sc_signal< sc_lv<11> > cin_cast2_mid1_fu_520_p1;
    sc_signal< sc_lv<11> > tmp_43_mid1_fu_540_p2;
    sc_signal< sc_lv<13> > p_shl_mid1_fu_553_p3;
    sc_signal< sc_lv<13> > p_shl_cast_mid2_fu_565_p3;
    sc_signal< sc_lv<7> > cin_cast1_mid1_fu_516_p1;
    sc_signal< sc_lv<7> > p_shl1_cast_mid1_fu_536_p1;
    sc_signal< sc_lv<7> > tmp2_mid1_fu_577_p2;
    sc_signal< sc_lv<7> > tmp_51_mid_fu_591_p2;
    sc_signal< sc_lv<14> > p_shl_cast_mid1_fu_561_p1;
    sc_signal< sc_lv<14> > tmp4_cast_mid_fu_608_p1;
    sc_signal< sc_lv<14> > tmp_mid_fu_612_p2;
    sc_signal< sc_lv<14> > tmp_fu_472_p2;
    sc_signal< sc_lv<9> > tmp_51_cast_mid_fu_596_p1;
    sc_signal< sc_lv<9> > p_shl3_mid_fu_600_p3;
    sc_signal< sc_lv<9> > tmp5_mid_fu_626_p2;
    sc_signal< sc_lv<9> > tmp5_fu_478_p2;
    sc_signal< sc_lv<1> > exitcond_fu_646_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_640_p2;
    sc_signal< sc_lv<3> > y_mid_fu_502_p3;
    sc_signal< sc_lv<1> > exitcond_mid_fu_652_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_672_p2;
    sc_signal< sc_lv<3> > y_1_fu_666_p2;
    sc_signal< sc_lv<3> > tmp3_mid1_fu_690_p2;
    sc_signal< sc_lv<7> > tmp2_mid2_fu_583_p3;
    sc_signal< sc_lv<7> > tmp3_cast_mid1_fu_695_p1;
    sc_signal< sc_lv<7> > tmp_51_mid1_fu_699_p2;
    sc_signal< sc_lv<11> > y_cast_mid1_fu_686_p1;
    sc_signal< sc_lv<11> > tmp_43_mid2_fu_545_p3;
    sc_signal< sc_lv<11> > tmp4_mid1_fu_717_p2;
    sc_signal< sc_lv<14> > p_shl_cast_mid2_cast_fu_573_p1;
    sc_signal< sc_lv<14> > tmp4_cast_mid1_fu_723_p1;
    sc_signal< sc_lv<14> > tmp_mid1_fu_727_p2;
    sc_signal< sc_lv<14> > tmp_mid3_fu_618_p3;
    sc_signal< sc_lv<14> > tmp_mid2_fu_733_p3;
    sc_signal< sc_lv<9> > tmp_51_cast_mid1_fu_705_p1;
    sc_signal< sc_lv<9> > p_shl3_mid1_fu_709_p3;
    sc_signal< sc_lv<9> > tmp5_mid1_fu_749_p2;
    sc_signal< sc_lv<9> > tmp5_mid3_fu_632_p3;
    sc_signal< sc_lv<3> > x_mid2_fu_678_p3;
    sc_signal< sc_lv<9> > tmp5_mid2_fu_755_p3;
    sc_signal< sc_lv<9> > tmp6_cast_fu_775_p1;
    sc_signal< sc_lv<9> > tmp_50_fu_779_p2;
    sc_signal< sc_lv<14> > x_cast9_fu_771_p1;
    sc_signal< sc_lv<14> > tmp7_fu_790_p2;
    sc_signal< sc_lv<16> > p_shl2_mid2_fu_741_p3;
    sc_signal< sc_lv<16> > tmp7_cast_fu_796_p1;
    sc_signal< sc_lv<16> > tmp_52_fu_800_p2;
    sc_signal< sc_lv<6> > indvar_flatten_op_fu_817_p2;
    sc_signal< sc_lv<7> > tmp_46_fu_831_p2;
    sc_signal< sc_lv<2> > indvar_flatten45_op_fu_840_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<9> ap_const_lv9_190;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<6> ap_const_lv6_19;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_c3_bias_address0();
    void thread_c3_bias_ce0();
    void thread_c3_bias_load_mid2_fu_326_p1();
    void thread_c3_weight_address0();
    void thread_c3_weight_ce0();
    void thread_cin_cast1_fu_384_p1();
    void thread_cin_cast1_mid1_fu_516_p1();
    void thread_cin_cast2_fu_388_p1();
    void thread_cin_cast2_mid1_fu_520_p1();
    void thread_cin_mid2_fu_658_p3();
    void thread_cin_s_fu_510_p2();
    void thread_cout_s_fu_312_p2();
    void thread_exitcond_flatten3_fu_288_p2();
    void thread_exitcond_flatten4_fu_484_p2();
    void thread_exitcond_flatten5_fu_496_p2();
    void thread_exitcond_flatten_fu_276_p2();
    void thread_exitcond_fu_646_p2();
    void thread_exitcond_mid_fu_652_p2();
    void thread_grp_fu_263_p0();
    void thread_h_1_fu_349_p2();
    void thread_h_cast1_mid2_cast_fu_381_p1();
    void thread_h_cast_mid2_cast_fu_378_p1();
    void thread_h_cast_mid2_fu_355_p3();
    void thread_h_cast_mid_fu_337_p2();
    void thread_h_mid2_fu_363_p3();
    void thread_h_mid_fu_300_p2();
    void thread_h_not_fu_343_p2();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_indvar_flatten45_op_fu_840_p2();
    void thread_indvar_flatten_next1_1_fu_282_p2();
    void thread_indvar_flatten_next1_fu_490_p2();
    void thread_indvar_flatten_next9_fu_846_p3();
    void thread_indvar_flatten_next_fu_823_p3();
    void thread_indvar_flatten_op_fu_817_p2();
    void thread_not_exitcond_flatten_6_fu_294_p2();
    void thread_not_exitcond_flatten_7_fu_331_p2();
    void thread_not_exitcond_flatten_fu_640_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_404_p1();
    void thread_p_shl1_cast_mid1_fu_536_p1();
    void thread_p_shl1_fu_396_p3();
    void thread_p_shl1_mid1_fu_528_p3();
    void thread_p_shl2_mid2_fu_741_p3();
    void thread_p_shl3_fu_454_p3();
    void thread_p_shl3_mid1_fu_709_p3();
    void thread_p_shl3_mid_fu_600_p3();
    void thread_p_shl_cast_fu_421_p1();
    void thread_p_shl_cast_mid1_fu_561_p1();
    void thread_p_shl_cast_mid2_cast_fu_573_p1();
    void thread_p_shl_cast_mid2_fu_565_p3();
    void thread_p_shl_fu_413_p3();
    void thread_p_shl_mid1_fu_553_p3();
    void thread_tmp2_fu_425_p2();
    void thread_tmp2_mid1_fu_577_p2();
    void thread_tmp2_mid2_fu_583_p3();
    void thread_tmp3_cast_fu_440_p1();
    void thread_tmp3_cast_mid1_fu_695_p1();
    void thread_tmp3_fu_435_p2();
    void thread_tmp3_mid1_fu_690_p2();
    void thread_tmp4_cast_fu_468_p1();
    void thread_tmp4_cast_mid1_fu_723_p1();
    void thread_tmp4_cast_mid_fu_608_p1();
    void thread_tmp4_fu_462_p2();
    void thread_tmp4_mid1_fu_717_p2();
    void thread_tmp5_fu_478_p2();
    void thread_tmp5_mid1_fu_749_p2();
    void thread_tmp5_mid2_fu_755_p3();
    void thread_tmp5_mid3_fu_632_p3();
    void thread_tmp5_mid_fu_626_p2();
    void thread_tmp6_cast_fu_775_p1();
    void thread_tmp7_cast_fu_796_p1();
    void thread_tmp7_fu_790_p2();
    void thread_tmp_32_mid2_fu_371_p3();
    void thread_tmp_32_mid2_v_v_fu_318_p3();
    void thread_tmp_3_fu_392_p1();
    void thread_tmp_43_fu_408_p2();
    void thread_tmp_43_mid1_fu_540_p2();
    void thread_tmp_43_mid2_fu_545_p3();
    void thread_tmp_46_fu_831_p2();
    void thread_tmp_47_fu_835_p1();
    void thread_tmp_48_fu_444_p2();
    void thread_tmp_4_fu_524_p1();
    void thread_tmp_50_fu_779_p2();
    void thread_tmp_51_cast_fu_450_p1();
    void thread_tmp_51_cast_mid1_fu_705_p1();
    void thread_tmp_51_cast_mid_fu_596_p1();
    void thread_tmp_51_fu_785_p1();
    void thread_tmp_51_mid1_fu_699_p2();
    void thread_tmp_51_mid_fu_591_p2();
    void thread_tmp_52_fu_800_p2();
    void thread_tmp_53_fu_806_p1();
    void thread_tmp_7_fu_672_p2();
    void thread_tmp_fu_472_p2();
    void thread_tmp_mid1_fu_727_p2();
    void thread_tmp_mid2_fu_733_p3();
    void thread_tmp_mid3_fu_618_p3();
    void thread_tmp_mid_fu_612_p2();
    void thread_w_mid_fu_306_p2();
    void thread_x_1_fu_811_p2();
    void thread_x_cast9_fu_771_p1();
    void thread_x_mid2_fu_678_p3();
    void thread_y_1_fu_666_p2();
    void thread_y_cast_fu_431_p1();
    void thread_y_cast_mid1_fu_686_p1();
    void thread_y_mid2_fu_763_p3();
    void thread_y_mid_fu_502_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
