// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _top_net_HH_
#define _top_net_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_1.h"
#include "conv_2.h"
#include "conv_3.h"
#include "conv_4.h"
#include "conv_5.h"
#include "max_pool_2D_1.h"
#include "max_pool_2D.h"
#include "top_net_fcmp_32nsdEe.h"
#include "top_net_c1_output.h"
#include "top_net_p1_output.h"
#include "top_net_c2_output.h"
#include "top_net_p2_output.h"
#include "top_net_c3_output.h"
#include "top_net_c4_output.h"
#include "top_net_c5_output.h"
#include "top_net_AXILiteS_s_axi.h"
#include "top_net_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct top_net : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const7;
    sc_signal< sc_lv<5> > ap_var_for_const8;


    // Module declarations
    top_net(sc_module_name name);
    SC_HAS_PROCESS(top_net);

    ~top_net();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    top_net_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* top_net_AXILiteS_s_axi_U;
    top_net_gmem_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* top_net_gmem_m_axi_U;
    top_net_c1_output* c1_output_U;
    top_net_p1_output* p1_output_U;
    top_net_c2_output* c2_output_U;
    top_net_p2_output* p2_output_U;
    top_net_c3_output* c3_output_U;
    top_net_c4_output* c4_output_U;
    top_net_c5_output* c5_output_U;
    conv_1* grp_conv_1_fu_212;
    conv_2* grp_conv_2_fu_225;
    conv_3* grp_conv_3_fu_235;
    conv_4* grp_conv_4_fu_245;
    conv_5* grp_conv_5_fu_255;
    max_pool_2D_1* grp_max_pool_2D_1_fu_265;
    max_pool_2D* grp_max_pool_2D_fu_271;
    top_net_fcmp_32nsdEe<1,1,32,32,1>* top_net_fcmp_32nsdEe_U41;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<24> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > in_r;
    sc_signal< sc_lv<32> > result;
    sc_signal< sc_logic > gmem_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<1> > exitcond_i_fu_317_p2;
    sc_signal< sc_logic > gmem_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > gmem_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > gmem_AWVALID;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_logic > gmem_WVALID;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<32> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_logic > gmem_BREADY;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_lv<30> > result3_reg_349;
    sc_signal< sc_lv<30> > in1_reg_354;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > gmem_addr_reg_364;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > c5_output_q0;
    sc_signal< sc_lv<32> > max_index_cast1_fu_313_p1;
    sc_signal< sc_lv<32> > max_index_cast1_reg_375;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_AWREADY;
    sc_signal< bool > ap_block_state17_io;
    sc_signal< sc_lv<4> > i_fu_328_p2;
    sc_signal< sc_lv<4> > i_reg_388;
    sc_signal< sc_lv<32> > max_index_1_fu_334_p3;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > max_value_2_fu_341_p3;
    sc_signal< sc_lv<13> > c1_output_address0;
    sc_signal< sc_logic > c1_output_ce0;
    sc_signal< sc_logic > c1_output_we0;
    sc_signal< sc_lv<32> > c1_output_q0;
    sc_signal< sc_logic > c1_output_ce1;
    sc_signal< sc_lv<32> > c1_output_q1;
    sc_signal< sc_lv<11> > p1_output_address0;
    sc_signal< sc_logic > p1_output_ce0;
    sc_signal< sc_logic > p1_output_we0;
    sc_signal< sc_lv<32> > p1_output_q0;
    sc_signal< sc_lv<11> > c2_output_address0;
    sc_signal< sc_logic > c2_output_ce0;
    sc_signal< sc_logic > c2_output_we0;
    sc_signal< sc_lv<32> > c2_output_q0;
    sc_signal< sc_logic > c2_output_ce1;
    sc_signal< sc_lv<32> > c2_output_q1;
    sc_signal< sc_lv<9> > p2_output_address0;
    sc_signal< sc_logic > p2_output_ce0;
    sc_signal< sc_logic > p2_output_we0;
    sc_signal< sc_lv<32> > p2_output_q0;
    sc_signal< sc_lv<7> > c3_output_address0;
    sc_signal< sc_logic > c3_output_ce0;
    sc_signal< sc_logic > c3_output_we0;
    sc_signal< sc_lv<32> > c3_output_q0;
    sc_signal< sc_lv<7> > c4_output_address0;
    sc_signal< sc_logic > c4_output_ce0;
    sc_signal< sc_logic > c4_output_we0;
    sc_signal< sc_lv<32> > c4_output_q0;
    sc_signal< sc_lv<4> > c5_output_address0;
    sc_signal< sc_logic > c5_output_ce0;
    sc_signal< sc_logic > c5_output_we0;
    sc_signal< sc_logic > grp_conv_1_fu_212_ap_start;
    sc_signal< sc_logic > grp_conv_1_fu_212_ap_done;
    sc_signal< sc_logic > grp_conv_1_fu_212_ap_idle;
    sc_signal< sc_logic > grp_conv_1_fu_212_ap_ready;
    sc_signal< sc_logic > grp_conv_1_fu_212_m_axi_in_r_AWVALID;
    sc_signal< sc_lv<32> > grp_conv_1_fu_212_m_axi_in_r_AWADDR;
    sc_signal< sc_lv<1> > grp_conv_1_fu_212_m_axi_in_r_AWID;
    sc_signal< sc_lv<32> > grp_conv_1_fu_212_m_axi_in_r_AWLEN;
    sc_signal< sc_lv<3> > grp_conv_1_fu_212_m_axi_in_r_AWSIZE;
    sc_signal< sc_lv<2> > grp_conv_1_fu_212_m_axi_in_r_AWBURST;
    sc_signal< sc_lv<2> > grp_conv_1_fu_212_m_axi_in_r_AWLOCK;
    sc_signal< sc_lv<4> > grp_conv_1_fu_212_m_axi_in_r_AWCACHE;
    sc_signal< sc_lv<3> > grp_conv_1_fu_212_m_axi_in_r_AWPROT;
    sc_signal< sc_lv<4> > grp_conv_1_fu_212_m_axi_in_r_AWQOS;
    sc_signal< sc_lv<4> > grp_conv_1_fu_212_m_axi_in_r_AWREGION;
    sc_signal< sc_lv<1> > grp_conv_1_fu_212_m_axi_in_r_AWUSER;
    sc_signal< sc_logic > grp_conv_1_fu_212_m_axi_in_r_WVALID;
    sc_signal< sc_lv<32> > grp_conv_1_fu_212_m_axi_in_r_WDATA;
    sc_signal< sc_lv<4> > grp_conv_1_fu_212_m_axi_in_r_WSTRB;
    sc_signal< sc_logic > grp_conv_1_fu_212_m_axi_in_r_WLAST;
    sc_signal< sc_lv<1> > grp_conv_1_fu_212_m_axi_in_r_WID;
    sc_signal< sc_lv<1> > grp_conv_1_fu_212_m_axi_in_r_WUSER;
    sc_signal< sc_logic > grp_conv_1_fu_212_m_axi_in_r_ARVALID;
    sc_signal< sc_lv<32> > grp_conv_1_fu_212_m_axi_in_r_ARADDR;
    sc_signal< sc_lv<1> > grp_conv_1_fu_212_m_axi_in_r_ARID;
    sc_signal< sc_lv<32> > grp_conv_1_fu_212_m_axi_in_r_ARLEN;
    sc_signal< sc_lv<3> > grp_conv_1_fu_212_m_axi_in_r_ARSIZE;
    sc_signal< sc_lv<2> > grp_conv_1_fu_212_m_axi_in_r_ARBURST;
    sc_signal< sc_lv<2> > grp_conv_1_fu_212_m_axi_in_r_ARLOCK;
    sc_signal< sc_lv<4> > grp_conv_1_fu_212_m_axi_in_r_ARCACHE;
    sc_signal< sc_lv<3> > grp_conv_1_fu_212_m_axi_in_r_ARPROT;
    sc_signal< sc_lv<4> > grp_conv_1_fu_212_m_axi_in_r_ARQOS;
    sc_signal< sc_lv<4> > grp_conv_1_fu_212_m_axi_in_r_ARREGION;
    sc_signal< sc_lv<1> > grp_conv_1_fu_212_m_axi_in_r_ARUSER;
    sc_signal< sc_logic > grp_conv_1_fu_212_m_axi_in_r_RREADY;
    sc_signal< sc_logic > grp_conv_1_fu_212_m_axi_in_r_BREADY;
    sc_signal< sc_lv<13> > grp_conv_1_fu_212_output_r_address0;
    sc_signal< sc_logic > grp_conv_1_fu_212_output_r_ce0;
    sc_signal< sc_logic > grp_conv_1_fu_212_output_r_we0;
    sc_signal< sc_lv<32> > grp_conv_1_fu_212_output_r_d0;
    sc_signal< sc_logic > grp_conv_2_fu_225_ap_start;
    sc_signal< sc_logic > grp_conv_2_fu_225_ap_done;
    sc_signal< sc_logic > grp_conv_2_fu_225_ap_idle;
    sc_signal< sc_logic > grp_conv_2_fu_225_ap_ready;
    sc_signal< sc_lv<11> > grp_conv_2_fu_225_in_r_address0;
    sc_signal< sc_logic > grp_conv_2_fu_225_in_r_ce0;
    sc_signal< sc_lv<11> > grp_conv_2_fu_225_output_r_address0;
    sc_signal< sc_logic > grp_conv_2_fu_225_output_r_ce0;
    sc_signal< sc_logic > grp_conv_2_fu_225_output_r_we0;
    sc_signal< sc_lv<32> > grp_conv_2_fu_225_output_r_d0;
    sc_signal< sc_logic > grp_conv_3_fu_235_ap_start;
    sc_signal< sc_logic > grp_conv_3_fu_235_ap_done;
    sc_signal< sc_logic > grp_conv_3_fu_235_ap_idle;
    sc_signal< sc_logic > grp_conv_3_fu_235_ap_ready;
    sc_signal< sc_lv<9> > grp_conv_3_fu_235_in_r_address0;
    sc_signal< sc_logic > grp_conv_3_fu_235_in_r_ce0;
    sc_signal< sc_lv<7> > grp_conv_3_fu_235_output_r_address0;
    sc_signal< sc_logic > grp_conv_3_fu_235_output_r_ce0;
    sc_signal< sc_logic > grp_conv_3_fu_235_output_r_we0;
    sc_signal< sc_lv<32> > grp_conv_3_fu_235_output_r_d0;
    sc_signal< sc_logic > grp_conv_4_fu_245_ap_start;
    sc_signal< sc_logic > grp_conv_4_fu_245_ap_done;
    sc_signal< sc_logic > grp_conv_4_fu_245_ap_idle;
    sc_signal< sc_logic > grp_conv_4_fu_245_ap_ready;
    sc_signal< sc_lv<7> > grp_conv_4_fu_245_in_r_address0;
    sc_signal< sc_logic > grp_conv_4_fu_245_in_r_ce0;
    sc_signal< sc_lv<7> > grp_conv_4_fu_245_output_r_address0;
    sc_signal< sc_logic > grp_conv_4_fu_245_output_r_ce0;
    sc_signal< sc_logic > grp_conv_4_fu_245_output_r_we0;
    sc_signal< sc_lv<32> > grp_conv_4_fu_245_output_r_d0;
    sc_signal< sc_logic > grp_conv_5_fu_255_ap_start;
    sc_signal< sc_logic > grp_conv_5_fu_255_ap_done;
    sc_signal< sc_logic > grp_conv_5_fu_255_ap_idle;
    sc_signal< sc_logic > grp_conv_5_fu_255_ap_ready;
    sc_signal< sc_lv<7> > grp_conv_5_fu_255_in_r_address0;
    sc_signal< sc_logic > grp_conv_5_fu_255_in_r_ce0;
    sc_signal< sc_lv<4> > grp_conv_5_fu_255_output_r_address0;
    sc_signal< sc_logic > grp_conv_5_fu_255_output_r_ce0;
    sc_signal< sc_logic > grp_conv_5_fu_255_output_r_we0;
    sc_signal< sc_lv<32> > grp_conv_5_fu_255_output_r_d0;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_ap_start;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_ap_done;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_ap_idle;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_ap_ready;
    sc_signal< sc_lv<13> > grp_max_pool_2D_1_fu_265_in_r_address0;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_in_r_ce0;
    sc_signal< sc_lv<13> > grp_max_pool_2D_1_fu_265_in_r_address1;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_in_r_ce1;
    sc_signal< sc_lv<11> > grp_max_pool_2D_1_fu_265_output_r_address0;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_output_r_ce0;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_output_r_we0;
    sc_signal< sc_lv<32> > grp_max_pool_2D_1_fu_265_output_r_d0;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_ap_start;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_ap_done;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_ap_idle;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_ap_ready;
    sc_signal< sc_lv<11> > grp_max_pool_2D_fu_271_in_r_address0;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_in_r_ce0;
    sc_signal< sc_lv<11> > grp_max_pool_2D_fu_271_in_r_address1;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_in_r_ce1;
    sc_signal< sc_lv<9> > grp_max_pool_2D_fu_271_output_r_address0;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_output_r_ce0;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_output_r_we0;
    sc_signal< sc_lv<32> > grp_max_pool_2D_fu_271_output_r_d0;
    sc_signal< sc_lv<32> > max_index_i_reg_178;
    sc_signal< sc_lv<32> > max_value1_i_reg_191;
    sc_signal< sc_lv<4> > max_index_reg_201;
    sc_signal< sc_logic > grp_conv_1_fu_212_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_conv_2_fu_225_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_conv_3_fu_235_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > grp_conv_4_fu_245_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > grp_conv_5_fu_255_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > grp_max_pool_2D_1_fu_265_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_max_pool_2D_fu_271_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_i_fu_323_p1;
    sc_signal< sc_lv<64> > tmp_fu_304_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_WREADY;
    sc_signal< sc_lv<1> > tmp_i_5_fu_277_p2;
    sc_signal< sc_lv<24> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_ST_fsm_state1;
    static const sc_lv<24> ap_ST_fsm_state2;
    static const sc_lv<24> ap_ST_fsm_state3;
    static const sc_lv<24> ap_ST_fsm_state4;
    static const sc_lv<24> ap_ST_fsm_state5;
    static const sc_lv<24> ap_ST_fsm_state6;
    static const sc_lv<24> ap_ST_fsm_state7;
    static const sc_lv<24> ap_ST_fsm_state8;
    static const sc_lv<24> ap_ST_fsm_state9;
    static const sc_lv<24> ap_ST_fsm_state10;
    static const sc_lv<24> ap_ST_fsm_state11;
    static const sc_lv<24> ap_ST_fsm_state12;
    static const sc_lv<24> ap_ST_fsm_state13;
    static const sc_lv<24> ap_ST_fsm_state14;
    static const sc_lv<24> ap_ST_fsm_state15;
    static const sc_lv<24> ap_ST_fsm_state16;
    static const sc_lv<24> ap_ST_fsm_state17;
    static const sc_lv<24> ap_ST_fsm_state18;
    static const sc_lv<24> ap_ST_fsm_state19;
    static const sc_lv<24> ap_ST_fsm_state20;
    static const sc_lv<24> ap_ST_fsm_state21;
    static const sc_lv<24> ap_ST_fsm_state22;
    static const sc_lv<24> ap_ST_fsm_state23;
    static const sc_lv<24> ap_ST_fsm_state24;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_17;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state17_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_gmem_AWREADY();
    void thread_ap_sig_ioackin_gmem_WREADY();
    void thread_c1_output_address0();
    void thread_c1_output_ce0();
    void thread_c1_output_ce1();
    void thread_c1_output_we0();
    void thread_c2_output_address0();
    void thread_c2_output_ce0();
    void thread_c2_output_ce1();
    void thread_c2_output_we0();
    void thread_c3_output_address0();
    void thread_c3_output_ce0();
    void thread_c3_output_we0();
    void thread_c4_output_address0();
    void thread_c4_output_ce0();
    void thread_c4_output_we0();
    void thread_c5_output_address0();
    void thread_c5_output_ce0();
    void thread_c5_output_we0();
    void thread_exitcond_i_fu_317_p2();
    void thread_gmem_ARVALID();
    void thread_gmem_AWVALID();
    void thread_gmem_BREADY();
    void thread_gmem_RREADY();
    void thread_gmem_WVALID();
    void thread_gmem_blk_n_AW();
    void thread_gmem_blk_n_B();
    void thread_gmem_blk_n_W();
    void thread_grp_conv_1_fu_212_ap_start();
    void thread_grp_conv_2_fu_225_ap_start();
    void thread_grp_conv_3_fu_235_ap_start();
    void thread_grp_conv_4_fu_245_ap_start();
    void thread_grp_conv_5_fu_255_ap_start();
    void thread_grp_max_pool_2D_1_fu_265_ap_start();
    void thread_grp_max_pool_2D_fu_271_ap_start();
    void thread_i_fu_328_p2();
    void thread_max_index_1_fu_334_p3();
    void thread_max_index_cast1_fu_313_p1();
    void thread_max_value_2_fu_341_p3();
    void thread_p1_output_address0();
    void thread_p1_output_ce0();
    void thread_p1_output_we0();
    void thread_p2_output_address0();
    void thread_p2_output_ce0();
    void thread_p2_output_we0();
    void thread_tmp_fu_304_p1();
    void thread_tmp_i_fu_323_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
